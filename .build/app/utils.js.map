{
  "version": 3,
  "sources": ["../../app/utils.ts"],
  "sourcesContent": ["import { useMemo } from \"react\";\nimport { useMatches } from \"@remix-run/react\";\nimport type { User } from \"./models/user.server\";\n\nexport function useMatchesData(id: string) {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n\n  return route?.data;\n}\n\nexport function isUser(user: User) {\n  return user && typeof user === \"object\";\n}\n\nexport function useOptionalUser() {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser() {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwB;AACxB,IAAAA,gBAA2B;AAGpB,SAAS,eAAe,IAAY;AACzC,QAAM,qBAAiB,0BAAW;AAClC,QAAM,YAAQ;AAAA,IACZ,MAAM,eAAe,KAAK,CAACC,WAAUA,OAAM,OAAO,EAAE;AAAA,IACpD,CAAC,gBAAgB,EAAE;AAAA,EACrB;AAEA,SAAO,+BAAO;AAChB;AAEO,SAAS,OAAO,MAAY;AACjC,SAAO,QAAQ,OAAO,SAAS;AACjC;AAEO,SAAS,kBAAkB;AAChC,QAAM,OAAO,eAAe,MAAM;AAClC,MAAI,CAAC,QAAQ,CAAC,OAAO,KAAK,IAAI,GAAG;AAC/B,WAAO;AAAA,EACT;AACA,SAAO,KAAK;AACd;AAEO,SAAS,UAAU;AACxB,QAAM,YAAY,gBAAgB;AAClC,MAAI,CAAC,WAAW;AACd,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AAEO,SAAS,cAAc,OAAiC;AAC7D,SAAO,OAAO,UAAU,YAAY,MAAM,SAAS,KAAK,MAAM,SAAS,GAAG;AAC5E;",
  "names": ["import_react", "route"]
}
